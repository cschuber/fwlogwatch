# $Id: fwlogwatch.config,v 1.18 2002/02/14 21:36:53 bwess Exp $
#
# Sample fwlogwatch configuration file
#
# Uncommented options are ON, commented ones are OFF.
# See 'fwlogwatch -h' for the default values.


### Global options ###
# Use 'verbose' if you want extra information and log messages.
# Use it twice for even more info. Comment it out completely if
# you want fwlogwatch to be quiet.
# Command line option: -v
#
#verbose
#verbose

# Use 'resolve' if you want IP addresses looked up in the DNS (slow).
# Command line option: -n
#
#resolve

# Specify the input file if you don't want to use the default. Compressed
# files (gzip) are supported. You can use '-' for standard input (stdin).
# In realtime response mode the daemon needs the full path to the file.
# Command line option: -f <file>
#
#input	= 


### Evaluation options ###
# You can select which parsers you want to use if you don't want
# fwlogwatch to check for all known log formats. You can choose one or a
# combination of:
#
# i ipchains
# n netfilter
# c cisco IOS
# p cisco PIX
# f ipfilter
#
# Command line option: -P <format>
#
#parser	= 

# The following six options define which criteria will be considered
# when comparing logged packets. You can turn off the source or
# destination IP address distinction ('src_ip_off'/'dst_ip_off') or
# activate the protocol, source and destination port and TCP option
# distinction ('protocol'/'src_port'/'dst_port'/'tcp_opts').
# Command line options: -S / -D / -p / -s / -d / -y
#
#src_ip_off
#dst_ip_off
#protocol
#src_port
#dst_port
#tcp_opts

# The following eight options permit to select and/or exclude certain
# hosts or ports, multiple instances of the rules are permitted. Source
# and destination hosts and ports are differentiated.
#
#exclude_src_host	= 
#exclude_src_port	= 
#exclude_dst_host	= 
#exclude_dst_port	= 
#include_src_host	= 
#include_src_port	= 
#include_dst_host	= 
#include_dst_port	= 


### Sorting options ###
# Since the sort algorithm used is stable you can sort several times,
# entries that are equal for the primary criteria will be sorted by the
# next criteria. The sort string can be composed of 11 fields of the form
# 'ab' where 'a' is the sort criteria:
#
# c count
# t start time
# e end time
# z duration
# n target name
# p protocol
# b byte count
# S source host
# s source port
# D destination host
# d destination port
#
# and 'b' the order:
#
# a ascending
# d descending
#
# Sorting is done in the given sequence, so the last option is the primary
# criteria. If you don't use the 'sort_order' option the default 'tacd'
# will be used (start with the highest count, if two counts match list the
# one earlier in time first), of which 'ta' is built in, so if you specify
# an empty sort string or everything else is equal entries will be sorted
# ascending by time.
#
# Command line option: -O <order>
#
#sort_order	= 


### Log summary mode ###
# Use 'data_amount' if you want so see the sum of total packet lengths for
# each entry (this obviously only works with log formats that contain this
# information).
# Command line option: -b
#
#data_amount

# Use 'times' if you want to see the timestamp of the first and last logged
# packet of each entry.
# Command line option: -t
#
#times

# Use 'duration' if you want to see the time interval between the first and
# the last connection attempt of the current entry.
# Command line option: -z
#
#duration

# Use 'html' to turn on html output.
# Command line option: -w
#
#html

# With the following four options you can customize the colors of the
# summary, use the HTML RGB values.
#
#textcolor	= 000000
#bgcolor	= FFFFFF
#rowcolor1	= AAAAAA
#rowcolor2	= CCCCCC

# Specify the output file
# Command line option: -o <file>
#
#output	= summary.html

# Use 'recent' to ignore events older than a certain time (off by default).
# The default unit is seconds.
# Units: m = minutes, h = hours, d = days, w = weeks, M = months, y = years.
# Command line option: -l <time>
#
#recent	= 3d

# Use 'at_least' to hide entries that have a small number of counts (useful
# when analyzing large log files).
# Command line option: -m <count>
#
#at_least	= 5

# Use 'whois_lookup' if you want information about the source IP addresses
# looked up in the whois database (this is slow, please don't stress the
# registry with too many queries).
# Command line option: -W
#
#whois_lookup


### Interactive report mode ###
# Use 'interactive' to turn this mode on, a summary of entries that exceed
# the threshold will be shown first, then you will be presented with each
# report and options to modify and send it.
# Command line option: -i <count>
#
#interactive	= 

# Use 'sender' to specify your email address for abuse reports.
# Command line option: -F <email>
#
#sender	= 

# Use 'recipient' to specify the email address of the CERT you want to
# send reports to.
# Command line option: -T <email>
#
#recipient	= 

# You can use 'cc' to send a carbon copy of the report (e.g. to you for
# your archives or a second abuse or CERT contact).
# Command line option: -C <email>
#
#cc	= root@localhost

# Use 'template' to specify the template file you want to use to surround
# the report if you don't want to use the default.
# The line '# insert report here' in the template will be
# replaced with the report.
# Command line option: -I <file>
#
#template	= fwlogwatch.template


### Realtime response mode ###
# Use 'realtime_response' to turn this mode on.
# Command line option: -R
#
#realtime_response

# If 'ipchains_check' is activated (and the ipchains parser is selected),
# fwlogwatch will verify that ipchains rules are set up correctly.
#
#ipchains_check

# With the 'pidfile' option you can specify a file fwlogwatch will use to
# keep it's PID so it can receive signals from scripts.
#
#pidfile	= /var/run/fwlogwatch.pid

# Use 'alert_threshold' to define how many connections must happen (within
# the 'forget' time range) to activate an alert/response and don't want to
# use the default.
# Command line option: -a <count>
#
#alert_threshold	= 10

# Use the log summary option 'recent' above to control how long an event
# should be relevant, after the specified time it is forgotten and if
# another connection attempt is started it is treated as new.
# Command line option: -l

# An alert is logged to syslog by default, you can add predefined and/or
# custom notification and response functions using the fwlw_notify and
# fwlw_respond scripts that are executed if 'notify' and 'respond'
# respectively are specified here.
# Command line options: -A / -B
#
#notify
#respond

# Alternative paths for the notification and response scripts can be
# specified with the 'notify_script' and 'respond_script' options.
#
#notify_script	= 
#respond_script	= 

# Known hosts are those that will not be warned about or actions taken
# against, even if they match the alert/response criteria.
# Use 'known_host' for your trusted gateways, peers and DNS servers (this
# is an anti-spoofing measure). You can specify single IP addresses or
# networks in CIDR notation (e.g. 192.168.1.0/24).
# Command line option: -k <IP/net>
#
#known_host	= 
#known_host	= 

# You can see which hosts fwlogwatch knows about and which ones it is
# watching at any time through it's web interface. Use the 'server_status'
# option to activate the web server in fwlogwatch, 'bind_to' is the IP
# address of the interface to be bound (defaults to 127.0.0.1 (localhost),
# 0.0.0.0 means all), 'listen_port' is the port it will listen on (defaults
# to 888). 'listen_to' allows to restrict access to a single IP address.
# fwlogwatch will want to authenticate the user, that's what 'status_user'
# and 'status_password' are for. The password must be a standard Unix DES
# encrypted password including salt, you can for example use
# htpasswd -nb user password
# to generate one. Finally, 'refresh' activates automatic reloading of the
# status page, the parameter is the time in seconds.
# Command line option: -X
#
#server_status
#bind_to	= 
#listen_port	= 
#listen_to	= 
#status_user	= 
#status_password	= 
#refresh	= 


### Show log times mode ###
# Use this mode to display the number of lines and the time of the first and
# last entry in a log file. Unlike the summary mode report this does not show
# the time of the first and last packet log entry but the time of the first
# and last entry overall. No other action is performed. Compressed files
# (gzip) are supported.
# Command line option: -L <file>
#
#show_log_times	= 


### EOF ###
